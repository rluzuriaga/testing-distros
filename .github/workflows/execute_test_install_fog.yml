name: Execute - Test Install FOG

on:
  repository_dispatch:
    types: [fog-install-test]

defaults:
  run:
    shell: bash

permissions: 
  actions: write
  contents: write

jobs:
  run-all-distros:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run all distros
        run: |
          for fn in $(cd ./.github/workflows && ls distro_*); do
            echo "$fn"

            curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/${{ github.repository }}/actions/workflows/$fn/dispatches" \
            -d '{"ref":"main"}'
          done

      - name: Check if all distros ran
        run: |
          sleep 30
          for fn in $(cd ./.github/workflows && ls distro_*); do

            while [ "$run_status" == "in_progress" ] || [ "$run_status" == "queued" ]; do
              echo "here"
              run_status=$(curl -s \
                            -H "Accept: application/vnd.github+json" \
                            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                            -H "X-GitHub-Api-Version: 2022-11-28" \
                            https://api.github.com/repos/${{ github.repository }}/actions/workflows/$fn/runs \
                            | jq -r '.workflow_runs[0].status')
              sleep 10
            done
          
          done

          #   conclusion=$(curl -s \
          #     -H "Accept: application/vnd.github+json" \
          #     -H "Authorization: Bearer $GITHUB_TOKEN" \
          #     -H "X-GitHub-Api-Version: 2022-11-28" \
          #     https://api.github.com/repos/${{ github.repository }}/actions/workflows/$workflow_file/runs?branch=main&status=all \
          #     | jq -r '.workflow_runs[0].conclusion')

          #   if [ "$conclusion" != "success" ]; then
          #     echo "Workflow $workflow_file did not complete successfully."
          #     exit 1
          #   else
          #     echo "Workflow $workflow_file completed successfully."
          #   fi
          # }

          # while IFS= read -r workflow; do
          #   echo "Checking status of $workflow"
          #   check_workflow_status "$workflow"
          # done < workflow_list.txt
